{"ast":null,"code":"import { Page } from './../../app/models/page';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../services/producer.service\";\nimport * as i2 from \"@swimlane/ngx-datatable\";\n\nconst _c0 = function () {\n  return {\n    name: \"Id\"\n  };\n};\n\nconst _c1 = function () {\n  return {\n    name: \"Name\"\n  };\n};\n\nconst _c2 = function (a0, a1) {\n  return [a0, a1];\n};\n\nconst ViewHelper = [{\n  table_name: \"producers\",\n  displayColumns: [\"No\", \"Name\"]\n}];\nexport class TableComponent {\n  constructor(producerService) {\n    this.producerService = producerService;\n    this.page = new Page();\n    this.rows = new Array();\n    this.ColumnMode = ColumnMode;\n    this.page.pageNumber = 1;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({\n      offset: 0\n    });\n  }\n\n  display() {}\n\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.producerService.GetAll(this.page.pageNumber).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n\n}\n\nTableComponent.ɵfac = function TableComponent_Factory(t) {\n  return new (t || TableComponent)(i0.ɵɵdirectiveInject(i1.ProducerService));\n};\n\nTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TableComponent,\n  selectors: [[\"app-table\"]],\n  decls: 1,\n  vars: 14,\n  consts: [[\"rowHeight\", \"auto\", 1, \"material\", 3, \"rows\", \"columns\", \"columnMode\", \"headerHeight\", \"footerHeight\", \"externalPaging\", \"count\", \"offset\", \"limit\", \"page\"]],\n  template: function TableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ngx-datatable\", 0);\n      i0.ɵɵlistener(\"page\", function TableComponent_Template_ngx_datatable_page_0_listener($event) {\n        return ctx.setPage($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"rows\", ctx.rows)(\"columns\", i0.ɵɵpureFunction2(11, _c2, i0.ɵɵpureFunction0(9, _c0), i0.ɵɵpureFunction0(10, _c1)))(\"columnMode\", ctx.ColumnMode.force)(\"headerHeight\", 50)(\"footerHeight\", 50)(\"externalPaging\", true)(\"count\", ctx.page.totalElements)(\"offset\", ctx.page.pageNumber)(\"limit\", ctx.page.size);\n    }\n  },\n  dependencies: [i2.DatatableComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 811:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nError: Failed to find '..@swimlane/ngx-datatable/assets/icons.css'\\\\n  in [\\\\n    G:\\\\\\\\\\u0420\\u041F\\u0411\\u0414\\u0418\\u0421\\\\\\\\BuildingContractor.FrontEnd\\\\\\\\src\\\\\\\\@shared\\\\\\\\table\\\\n  ]\\\\n    at G:\\\\\\\\\\u0420\\u041F\\u0411\\u0414\\u0418\\u0421\\\\\\\\BuildingContractor.FrontEnd\\\\\\\\node_modules\\\\\\\\postcss-import\\\\\\\\lib\\\\\\\\resolve-id.js:35:13\\\\n    at async Promise.all (index 0)\\\\n    at async LazyResult.runAsync (G:\\\\\\\\\\u0420\\u041F\\u0411\\u0414\\u0418\\u0421\\\\\\\\BuildingContractor.FrontEnd\\\\\\\\node_modules\\\\\\\\postcss\\\\\\\\lib\\\\\\\\lazy-result.js:396:11)\\\\n    at async Object.loader (G:\\\\\\\\\\u0420\\u041F\\u0411\\u0414\\u0418\\u0421\\\\\\\\BuildingContractor.FrontEnd\\\\\\\\node_modules\\\\\\\\postcss-loader\\\\\\\\dist\\\\\\\\index.js:95:14)\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[811]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAT,QAAqB,yBAArB;AAGA,SAASC,UAAT,QAA2B,yBAA3B;;;;;;;;;;;;;;;;;;;;;AAEA,MAAMC,UAAU,GAAG,CACjB;EACEC,UAAU,EAAE,WADd;EAEEC,cAAc,EAAE,CAAC,IAAD,EAAO,MAAP;AAFlB,CADiB,CAAnB;AAaA,OAAM,MAAOC,cAAP,CAAqB;EAIzBC,YAAoBC,eAApB,EAAoD;IAAhC;IAHb,YAAO,IAAIP,IAAJ,EAAP;IACA,YAAO,IAAIQ,KAAJ,EAAP;IACA,kBAAaP,UAAb;IAEL,KAAKQ,IAAL,CAAUC,UAAV,GAAuB,CAAvB;IACA,KAAKD,IAAL,CAAUE,IAAV,GAAiB,EAAjB;EACD;;EAEDC,QAAQ;IACN,KAAKC,OAAL,CAAa;MAAEC,MAAM,EAAE;IAAV,CAAb;EACD;;EAGMC,OAAO,IAEb;;EAEMF,OAAO,CAACG,QAAD,EAAc;IAC1B,KAAKP,IAAL,CAAUC,UAAV,GAAuBM,QAAQ,CAACF,MAAhC;IACA,KAAKP,eAAL,CAAqBU,MAArB,CAA4B,KAAKR,IAAL,CAAUC,UAAtC,EAAkDQ,SAAlD,CAA4DC,SAAS,IAAG;MACtE,KAAKV,IAAL,GAAYU,SAAS,CAACV,IAAtB;MACA,KAAKW,IAAL,GAAYD,SAAS,CAACE,IAAtB;IACD,CAHD;EAID;;AAxBwB;;;mBAAdhB,gBAAciB;AAAA;;;QAAdjB;EAAckB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MC2G3BL;MAYQA;QAAA,OAAQM,mBAAR;MAAuB,CAAvB;MAEFN;;;;MAZEA,gCAAa,SAAb,EAAaA,oFAAb,EAAa,YAAb,EAAaM,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,gBAAb,EAAa,IAAb,EAAa,OAAb,EAAaA,sBAAb,EAAa,QAAb,EAAaA,mBAAb,EAAa,OAAb,EAAaA,aAAb","names":["Page","ColumnMode","ViewHelper","table_name","displayColumns","TableComponent","constructor","producerService","Array","page","pageNumber","size","ngOnInit","setPage","offset","display","pageInfo","GetAll","subscribe","pagedData","rows","data","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\РПБДИС\\BuildingContractor.FrontEnd\\src\\@shared\\table\\table.component.ts","G:\\РПБДИС\\BuildingContractor.FrontEnd\\src\\@shared\\table\\table.component.html"],"sourcesContent":["import { Producer } from './../../app/models/producers';\nimport { Page } from './../../app/models/page';\nimport { ProducerService } from './../../services/producer.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\n\nconst ViewHelper = [\n  {\n    table_name: \"producers\",\n    displayColumns: [\"No\", \"Name\"]\n  },\n]\n\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss']\n})\nexport class TableComponent implements OnInit {\n  public page = new Page();\n  public rows = new Array<Producer>();\n  public ColumnMode = ColumnMode;\n  constructor(private producerService: ProducerService) {\n    this.page.pageNumber = 1;\n    this.page.size = 20;\n  }\n\n  ngOnInit(): void {\n    this.setPage({ offset: 0 });\n  }\n\n\n  public display() {\n\n  }\n\n  public setPage(pageInfo: any) {\n    this.page.pageNumber = pageInfo.offset;\n    this.producerService.GetAll(this.page.pageNumber).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n\n}\n","<!-- <div class=\"wrapper\">\n  <table> -->\n    <!-- <div class=\"table-navigation\">\n      <p class=\"arrow left-arrow\"></p>\n    </div> -->\n    <!-- <tr>\n      <th>No</th>\n      <th>No</th>\n      <th>No</th>\n      <th>No</th>\n      <th>No</th>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"row\">\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n      <td>Test</td>\n    </tr>\n    <tr class=\"pagination-wrapper\">\n      <td></td>\n      <td></td>\n      <td>Page:</td>\n      <td></td>\n      <td></td>\n    </tr>\n  </table>\n</div> -->\n<ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Id' }, { name: 'Name' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n"]},"metadata":{},"sourceType":"module"}